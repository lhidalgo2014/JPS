[{"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\index.js":"1","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\reportWebVitals.js":"2","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\App.js":"3","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\database.js":"4","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\firebase.js":"5","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\search\\Search.jsx":"6","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\createSorteo\\CreateSorteo.jsx":"7","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\accountMoney\\AccountMoney.jsx":"8","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\registerSorteo\\RegisterSorteo.jsx":"9","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\queryPrize\\QueryPrize.jsx":"10","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\Pay.jsx":"11","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\RewardPlan.jsx":"12","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\RewardPlanDetail.jsx":"13","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\QueryPaymentHistory.jsx":"14"},{"size":517,"mtime":1610821536645,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1609198047970,"results":"17","hashOfConfig":"16"},{"size":6535,"mtime":1612130505227,"results":"18","hashOfConfig":"16"},{"size":1594,"mtime":1612134484155,"results":"19","hashOfConfig":"16"},{"size":542,"mtime":1610211557143,"results":"20","hashOfConfig":"16"},{"size":5964,"mtime":1611995945359,"results":"21","hashOfConfig":"16"},{"size":6607,"mtime":1611988070559,"results":"22","hashOfConfig":"16"},{"size":5083,"mtime":1611457102039,"results":"23","hashOfConfig":"16"},{"size":6399,"mtime":1611457102062,"results":"24","hashOfConfig":"16"},{"size":12781,"mtime":1612130312133,"results":"25","hashOfConfig":"16"},{"size":3574,"mtime":1612129986504,"results":"26","hashOfConfig":"16"},{"size":4133,"mtime":1612129893371,"results":"27","hashOfConfig":"16"},{"size":4288,"mtime":1611996992530,"results":"28","hashOfConfig":"16"},{"size":10006,"mtime":1612136960878,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15ms1l7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\index.js",[],["60","61"],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\reportWebVitals.js",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\App.js",["62","63","64","65","66","67","68","69","70","71","72"],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\database.js",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\firebase.js",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\search\\Search.jsx",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\createSorteo\\CreateSorteo.jsx",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\accountMoney\\AccountMoney.jsx",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\registerSorteo\\RegisterSorteo.jsx",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\queryPrize\\QueryPrize.jsx",["73","74","75"],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\Pay.jsx",[],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\RewardPlan.jsx",["76"],"C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\RewardPlanDetail.jsx",["77"],"import { db } from '../firebase'\r\nimport React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n    { id: '#', label: '#', minWidth: 170 },\r\n    { id: 'tipo', label: 'Tipo', minWidth: 100 },\r\n    { id: 'premios', label: 'Cantidad de premios', minWidth: 100 },\r\n    { id: 'total', label: 'Total', minWidth: 100 }\r\n  ];\r\n  \r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    \r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nconst RewardPlan = (props) => {\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const createData = (sorteo) => {\r\n        return { '#': sorteo.id, tipo: sorteo.type, premios: sorteo.prizeList.length, total: sorteo.prizeList.reduce((a, b) => Number(a) + Number(b), 0) };\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    \r\n    const loadData = () => {\r\n        db.collection(\"sorteo\").where(\"state\", \"==\", \"sorteado\")\r\n            .onSnapshot(querySnapshot => {\r\n                const data = querySnapshot.docs.map(doc => {\r\n                    const tempData = doc.data()\r\n                    tempData.id = doc.id\r\n                    console.log(tempData);\r\n\r\n                    return createData(tempData)\r\n                });\r\n                setRows(data)\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ minWidth: column.minWidth }}\r\n                        >\r\n                            {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                        return (\r\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                {columns.map((column) => {\r\n                                    console.log('id: ' + column.id)\r\n                                    const value = row[column.id];\r\n                                    return (\r\n                                        <TableCell key={column.id} align={column.align}>\r\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default RewardPlan;","C:\\Users\\leist\\Documents\\Github\\JPS\\src\\components\\QueryPaymentHistory.jsx",["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":30},{"ruleId":"84","severity":1,"message":"88","line":3,"column":32,"nodeType":"86","messageId":"87","endLine":3,"endColumn":46},{"ruleId":"84","severity":1,"message":"89","line":3,"column":48,"nodeType":"86","messageId":"87","endLine":3,"endColumn":58},{"ruleId":"84","severity":1,"message":"90","line":3,"column":60,"nodeType":"86","messageId":"87","endLine":3,"endColumn":72},{"ruleId":"84","severity":1,"message":"91","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":18},{"ruleId":"84","severity":1,"message":"92","line":10,"column":8,"nodeType":"86","messageId":"87","endLine":10,"endColumn":24},{"ruleId":"84","severity":1,"message":"93","line":22,"column":8,"nodeType":"86","messageId":"87","endLine":22,"endColumn":21},{"ruleId":"84","severity":1,"message":"94","line":23,"column":8,"nodeType":"86","messageId":"87","endLine":23,"endColumn":21},{"ruleId":"84","severity":1,"message":"95","line":24,"column":8,"nodeType":"86","messageId":"87","endLine":24,"endColumn":25},{"ruleId":"84","severity":1,"message":"96","line":25,"column":8,"nodeType":"86","messageId":"87","endLine":25,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":101,"column":13,"nodeType":"99","endLine":101,"endColumn":145},{"ruleId":"84","severity":1,"message":"100","line":173,"column":21,"nodeType":"86","messageId":"87","endLine":173,"endColumn":31},{"ruleId":"84","severity":1,"message":"101","line":174,"column":19,"nodeType":"86","messageId":"87","endLine":174,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":219,"column":41,"nodeType":"104","endLine":219,"endColumn":50},{"ruleId":"105","severity":1,"message":"106","line":37,"column":8,"nodeType":"107","endLine":37,"endColumn":10,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"106","line":38,"column":8,"nodeType":"107","endLine":38,"endColumn":10,"suggestions":"109"},{"ruleId":"105","severity":1,"message":"106","line":72,"column":8,"nodeType":"107","endLine":72,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":133,"column":8,"nodeType":"107","endLine":133,"endColumn":14,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'transactAccountMoney' is defined but never used.","Identifier","unusedVar","'registerSorteo' is defined but never used.","'getSorteos' is defined but never used.","'createSorteo' is defined but never used.","'RewardPlan' is defined but never used.","'RewardPlanDetail' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setMessage' is assigned a value but never used.","'setPrize' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["115"],["116"],["117"],"React Hook useEffect has a missing dependency: 'updateRowsData'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},{"desc":"119","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [loadData]",{"range":"125","text":"126"},{"range":"127","text":"126"},{"range":"128","text":"126"},"Update the dependencies array to be: [data, updateRowsData]",{"range":"129","text":"130"},[1171,1173],"[loadData]",[1240,1242],[2348,2350],[3966,3972],"[data, updateRowsData]"]